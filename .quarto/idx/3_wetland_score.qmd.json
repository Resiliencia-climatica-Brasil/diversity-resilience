{"title":"Índice de áreas úmidas","markdown":{"yaml":{"title":"Índice de áreas úmidas","jupyter":"python3"},"headingText":"Importando pacotes e inicializando *geemap*","containsRefs":false,"markdown":"\n\n\n\n\n```{python}\nimport os\nimport ee\nimport geemap\n```\n\n```{python}\ngeemap.ee_initialize()\n```\n\nO índice de áreas úmidas é uma combinação da densidade de áreas úmidas localmente com a densidade e quantidade de áreas úmidas regionalmente. O índice de áreas úmidas entra no cálculo da diversidade da paisagem em locais planos e úmidos, com baixa variedade de formas de relevo e baixa amplitude altitudinal. Nesses locais a variação microclimática seria baixa devido a baixa variabilidade topográfica e geomorfológica, mas como há alta densidade de áreas úmidas, esses locais atuam regulando a variabilidade microclimática localmente [@anderson_resilient_2016].\n\nExistem três cenários de distribuição de áreas úmidas:\n* (1) Os locais estão presentes em áreas com alta densidade de áreas úmidas no entorno,\n* (2) Os locais estão situados em áreas com baixa densidade de áreas úmidas localmente, mas alta densidade regionalmente,\n* (3) Os locais estão presentes em áreas com alta quantidade de áreas úmidas, mas baixa densidade devido a sua distribuição espacial. \n\nDessa forma, o índice de áreas úmidas é composto pelos três cenários citados anteriormente, primeiro é calculado a densidade local, regional e a quantidade regional e, para cada métrica, é calculado um valor de Z, subtraindo pela média e dividindo pelo desvio padrão. A densidade de áreas úmidas é a média ponderada dos valores de Z da densidade local e regional (peso duplo para a densidade local). Nos locais onde os valores de Z da quantidade de áreas úmidas regional é maior que a densidade média calculada anteriormente, o índice torna-se a média ponderada da densidade local, densidade regional e quantidade de áreas úmidas regional (duplo peso para a densidade local) [@anderson_resilient_2016].   \n\n$$\n\\tiny\níndice\\ de\\ áreas\\ úmidas = \n  \\begin{cases}  \n    \\frac{2 \\times densidade_{local}(Z) + densidade_{regional}(Z)}{3} & \\text{se densidade média é maior ou igual à quantidade regional}\\\\\n    \\frac{2 \\times densidade_{local}(Z) + densidade_{regional}(Z) + quantidade_{regional}(Z)}{4}& \\text {se a quantidade regional for maior a densidade média}\n  \\end{cases}\n$$\n\nNeste capítulo demonstraremos como as densidades e a quantidade de áreas úmidas foram calculadas e no capítulo [Z_scores](https://resiliencia-climatica-brasil.github.io/diversity-resilience-python/5_Z_scores.html) mostraremos como calculamos os valores de Z e o índice de áreas úmidas. \n\n## Banco de dados\n\nUtilizamos como base de dados de áreas úmidas o *Global Wetlands database* [@gumbricht_tropical_2017]. Reprojetamos o *raster* de áreas úmidas para a mesma resolução do modelo digital de elevação usado nas etapas anteriores (~ 92 metros).\n\nRetiramos as áreas úmidas classificadas como sistemas lacustres e ribeirinhos (*riverines* e *lacustrines*) e reclassificamos o *raster* como sendo área úmida (1) ou não sendo área úmida (0). Depois, calculamos a densidade de áreas úmidas dentro de uma vizinhaça de 450 metros (5 células) de raio de um *kernel* circular (densidade local). Calculamos também a densidade e a quantidade de áreas úmidas na vizinhança de ~ 1170 metros (13 células) (regional).\n\n## Código para calcular as densidades e quantidade de áreas úmidas\n\nAs análises foram rodadas no *Google Earth Engine* [@gorelick_google_2017], devido a demanda computacional do projeto, usando o pacote **geemap** [@wu_geemap_2020] em *Python* [@python_software_foundation_python_2023] como interface pela facilidade na documentação e reprodutividade das análises. O JupyterNotebook para reprodução das análises pode ser encontrado em [https://github.com/Resiliencia-climatica-Brasil/diversity-resilience-python/blob/master/jupyternotebook/3_wetland_score.ipynb](https://github.com/Resiliencia-climatica-Brasil/diversity-resilience-python/blob/master/jupyternotebook/3_wetland_score.ipynb).\n\nPrimeiro, nós importamos os polígonos dos biomas do Brasil e extraímos suas coordenadas geográficas máximas e mínimas para delimitar a região de análise. Importamos o modelo digital de elevação e o *raster* de áreas úmidas e reprojetamos a resolução das áreas úmidas para a resolução do modelo digital de elevação.  \n\n```{python}\n# Importando mapa de biomas do IBGE para extrair as coordenadas \n# mínimas e máximas do Brasil\nregiao = ee.FeatureCollection(\"projects/ee-lucasljardim9/assets/Biome\")\n\ndef func_cmp(feature):\n    return feature.bounds() \n\n# Extraindo as coordenadas mínimas e máximas do Brasil\nregiao_box = regiao.map(func_cmp).geometry().dissolve(**{'maxError': 1}).bounds()\n\n# Extraindo a resolução do mapa\nDEM = ee.Image(\"MERIT/DEM/v1_0_3\") \n\nescala = DEM.projection().nominalScale()\n\n# Reprojetando áreas úmidas\nwetlands = (ee.Image(\"projects/ee-lucasljardim9/assets/Cifor_wetlands\") \n            .reproject(**{'crs': \"EPSG:4326\",\n                       'scale': escala}))\n```\n\nEm seguida, retiramos os sistemas ribeirinhos e lacustres do *raster* de áreas úmidas e reclassificamos as classes do raster em presença e ausência de áreas úmidas. \n\n```{python}\n# Criando uma máscara para rios e lagos\n\nrivers = wetlands.mask(wetlands.neq(10))\n\n# Retirando rios e lagos das áreas úmidas\n\nwetlands = wetlands.mask(rivers)\n\n# Transformando áreas úmidas em um raster binário\n# de presença de áreas úmidas\n\nwetlands_binary = wetlands.where(wetlands.gt(0), 1).unmask()\n```\n\nPosteriomente, calculamos a densidade de áreas úmidas, localmente, dentro de um *kernel* circular de ~450 metros (5 células). Primeiro, transformamos as células da vizinhança de cada célula focal em bandas de uma imagem. Assim, cada células vizinha da célula focal fica empilhada como uma coluna. Para cada coluna, somamos os valores das células (0 ou 1) como a quantidade de áreas úmidas na vizinhança. Depois, dividimos a quantidade de áreas úmidas pelo número de células na vizinhança, resultando na densidade de áreas úmidas.\n\n```{python}\nradius_pixels = 5\n\n# Tranforme as células da vizinha em bandas\n\nneighbors = (wetlands_binary\n            .neighborhoodToBands(ee.Kernel.circle(ee.Number(radius_pixels))))\n\n# Conte a quantidade de áreas úmidas na vizinhança\nwetlands_count = neighbors.reduce(ee.Reducer.sum()).toDouble()\n\n# Conte o número de células totais na vizinhança\n\nneighbors_amount = neighbors.bandNames().length()\n\n#Divida a quantidade de áreas úmidas pelo \n# número de células para calcular a densidade \nwetlands_density_local = wetlands_count.divide(ee.Number(neighbors_amount))\n```\n\nRepetimos o mesmo procedimento conduzido para a densidade local para calcularmos a densidade e quantidade de áreas úmidas regional.\n\n```{python}\nradius_pixels = 13\n\n# Transforme as células vizinhas em bandas\n\nneighbors = (wetlands_binary\n           .neighborhoodToBands(ee.Kernel.circle(\n                                   ee.Number(radius_pixels)\n                                   )\n                               ))\n\n# Conte a quantidade de áreas úmidas\nwetlands_count = neighbors.reduce(ee.Reducer.sum()).toDouble()\n\n# Conte o número de células totais na vizinhança\nneighbors_amount = neighbors.bandNames().length()\n\n# Calcule a densidade dividindo a quantidade \n# de áreas úmidas pelo número de células\nwetlands_density_regional = wetlands_count.divide(ee.Number(neighbors_amount))\n```\n\nPor fim, exportamos a densidade de áreas úmidas local (*wetlands_density*), a densidade regional (*wetlands_density_1000*) e a quantidade regional (*wetlands_count*) como *assets* no *Google Earth Engine*.\n\n```{python}\nassetId_quantidade = \"projects/ee-lucasljardim9/assets/wetlands_count\"\n\nassetId_densidade_local = \"projects/ee-lucasljardim9/assets/wetlands_density\"\n\nassetId_densidade_regional = \"projects/ee-lucasljardim9/assets/wetlands_density_1000\"\n\ngeemap.ee_export_image_to_asset(\n    wetlands_count, \n    description='wetlands_count', \n    assetId=assetId_quantidade, \n    region=regiao_box, \n    scale=escala, maxPixels=1e13\n)\n\ngeemap.ee_export_image_to_asset(\n    wetlands_density_local, \n    description='wetlands_density_local', \n    assetId=assetId_densidade_local, \n    region=regiao_box, \n    scale=escala, maxPixels=1e13\n)\n\ngeemap.ee_export_image_to_asset(\n    wetlands_density_regional, \n    description='wetlands_density_regional', \n    assetId=assetId_densidade_regional, \n    region=regiao_box, \n    scale=escala, maxPixels=1e13\n)\n```\n\n","srcMarkdownNoYaml":"\n\n\n\n## Importando pacotes e inicializando *geemap*\n\n```{python}\nimport os\nimport ee\nimport geemap\n```\n\n```{python}\ngeemap.ee_initialize()\n```\n\nO índice de áreas úmidas é uma combinação da densidade de áreas úmidas localmente com a densidade e quantidade de áreas úmidas regionalmente. O índice de áreas úmidas entra no cálculo da diversidade da paisagem em locais planos e úmidos, com baixa variedade de formas de relevo e baixa amplitude altitudinal. Nesses locais a variação microclimática seria baixa devido a baixa variabilidade topográfica e geomorfológica, mas como há alta densidade de áreas úmidas, esses locais atuam regulando a variabilidade microclimática localmente [@anderson_resilient_2016].\n\nExistem três cenários de distribuição de áreas úmidas:\n* (1) Os locais estão presentes em áreas com alta densidade de áreas úmidas no entorno,\n* (2) Os locais estão situados em áreas com baixa densidade de áreas úmidas localmente, mas alta densidade regionalmente,\n* (3) Os locais estão presentes em áreas com alta quantidade de áreas úmidas, mas baixa densidade devido a sua distribuição espacial. \n\nDessa forma, o índice de áreas úmidas é composto pelos três cenários citados anteriormente, primeiro é calculado a densidade local, regional e a quantidade regional e, para cada métrica, é calculado um valor de Z, subtraindo pela média e dividindo pelo desvio padrão. A densidade de áreas úmidas é a média ponderada dos valores de Z da densidade local e regional (peso duplo para a densidade local). Nos locais onde os valores de Z da quantidade de áreas úmidas regional é maior que a densidade média calculada anteriormente, o índice torna-se a média ponderada da densidade local, densidade regional e quantidade de áreas úmidas regional (duplo peso para a densidade local) [@anderson_resilient_2016].   \n\n$$\n\\tiny\níndice\\ de\\ áreas\\ úmidas = \n  \\begin{cases}  \n    \\frac{2 \\times densidade_{local}(Z) + densidade_{regional}(Z)}{3} & \\text{se densidade média é maior ou igual à quantidade regional}\\\\\n    \\frac{2 \\times densidade_{local}(Z) + densidade_{regional}(Z) + quantidade_{regional}(Z)}{4}& \\text {se a quantidade regional for maior a densidade média}\n  \\end{cases}\n$$\n\nNeste capítulo demonstraremos como as densidades e a quantidade de áreas úmidas foram calculadas e no capítulo [Z_scores](https://resiliencia-climatica-brasil.github.io/diversity-resilience-python/5_Z_scores.html) mostraremos como calculamos os valores de Z e o índice de áreas úmidas. \n\n## Banco de dados\n\nUtilizamos como base de dados de áreas úmidas o *Global Wetlands database* [@gumbricht_tropical_2017]. Reprojetamos o *raster* de áreas úmidas para a mesma resolução do modelo digital de elevação usado nas etapas anteriores (~ 92 metros).\n\nRetiramos as áreas úmidas classificadas como sistemas lacustres e ribeirinhos (*riverines* e *lacustrines*) e reclassificamos o *raster* como sendo área úmida (1) ou não sendo área úmida (0). Depois, calculamos a densidade de áreas úmidas dentro de uma vizinhaça de 450 metros (5 células) de raio de um *kernel* circular (densidade local). Calculamos também a densidade e a quantidade de áreas úmidas na vizinhança de ~ 1170 metros (13 células) (regional).\n\n## Código para calcular as densidades e quantidade de áreas úmidas\n\nAs análises foram rodadas no *Google Earth Engine* [@gorelick_google_2017], devido a demanda computacional do projeto, usando o pacote **geemap** [@wu_geemap_2020] em *Python* [@python_software_foundation_python_2023] como interface pela facilidade na documentação e reprodutividade das análises. O JupyterNotebook para reprodução das análises pode ser encontrado em [https://github.com/Resiliencia-climatica-Brasil/diversity-resilience-python/blob/master/jupyternotebook/3_wetland_score.ipynb](https://github.com/Resiliencia-climatica-Brasil/diversity-resilience-python/blob/master/jupyternotebook/3_wetland_score.ipynb).\n\nPrimeiro, nós importamos os polígonos dos biomas do Brasil e extraímos suas coordenadas geográficas máximas e mínimas para delimitar a região de análise. Importamos o modelo digital de elevação e o *raster* de áreas úmidas e reprojetamos a resolução das áreas úmidas para a resolução do modelo digital de elevação.  \n\n```{python}\n# Importando mapa de biomas do IBGE para extrair as coordenadas \n# mínimas e máximas do Brasil\nregiao = ee.FeatureCollection(\"projects/ee-lucasljardim9/assets/Biome\")\n\ndef func_cmp(feature):\n    return feature.bounds() \n\n# Extraindo as coordenadas mínimas e máximas do Brasil\nregiao_box = regiao.map(func_cmp).geometry().dissolve(**{'maxError': 1}).bounds()\n\n# Extraindo a resolução do mapa\nDEM = ee.Image(\"MERIT/DEM/v1_0_3\") \n\nescala = DEM.projection().nominalScale()\n\n# Reprojetando áreas úmidas\nwetlands = (ee.Image(\"projects/ee-lucasljardim9/assets/Cifor_wetlands\") \n            .reproject(**{'crs': \"EPSG:4326\",\n                       'scale': escala}))\n```\n\nEm seguida, retiramos os sistemas ribeirinhos e lacustres do *raster* de áreas úmidas e reclassificamos as classes do raster em presença e ausência de áreas úmidas. \n\n```{python}\n# Criando uma máscara para rios e lagos\n\nrivers = wetlands.mask(wetlands.neq(10))\n\n# Retirando rios e lagos das áreas úmidas\n\nwetlands = wetlands.mask(rivers)\n\n# Transformando áreas úmidas em um raster binário\n# de presença de áreas úmidas\n\nwetlands_binary = wetlands.where(wetlands.gt(0), 1).unmask()\n```\n\nPosteriomente, calculamos a densidade de áreas úmidas, localmente, dentro de um *kernel* circular de ~450 metros (5 células). Primeiro, transformamos as células da vizinhança de cada célula focal em bandas de uma imagem. Assim, cada células vizinha da célula focal fica empilhada como uma coluna. Para cada coluna, somamos os valores das células (0 ou 1) como a quantidade de áreas úmidas na vizinhança. Depois, dividimos a quantidade de áreas úmidas pelo número de células na vizinhança, resultando na densidade de áreas úmidas.\n\n```{python}\nradius_pixels = 5\n\n# Tranforme as células da vizinha em bandas\n\nneighbors = (wetlands_binary\n            .neighborhoodToBands(ee.Kernel.circle(ee.Number(radius_pixels))))\n\n# Conte a quantidade de áreas úmidas na vizinhança\nwetlands_count = neighbors.reduce(ee.Reducer.sum()).toDouble()\n\n# Conte o número de células totais na vizinhança\n\nneighbors_amount = neighbors.bandNames().length()\n\n#Divida a quantidade de áreas úmidas pelo \n# número de células para calcular a densidade \nwetlands_density_local = wetlands_count.divide(ee.Number(neighbors_amount))\n```\n\nRepetimos o mesmo procedimento conduzido para a densidade local para calcularmos a densidade e quantidade de áreas úmidas regional.\n\n```{python}\nradius_pixels = 13\n\n# Transforme as células vizinhas em bandas\n\nneighbors = (wetlands_binary\n           .neighborhoodToBands(ee.Kernel.circle(\n                                   ee.Number(radius_pixels)\n                                   )\n                               ))\n\n# Conte a quantidade de áreas úmidas\nwetlands_count = neighbors.reduce(ee.Reducer.sum()).toDouble()\n\n# Conte o número de células totais na vizinhança\nneighbors_amount = neighbors.bandNames().length()\n\n# Calcule a densidade dividindo a quantidade \n# de áreas úmidas pelo número de células\nwetlands_density_regional = wetlands_count.divide(ee.Number(neighbors_amount))\n```\n\nPor fim, exportamos a densidade de áreas úmidas local (*wetlands_density*), a densidade regional (*wetlands_density_1000*) e a quantidade regional (*wetlands_count*) como *assets* no *Google Earth Engine*.\n\n```{python}\nassetId_quantidade = \"projects/ee-lucasljardim9/assets/wetlands_count\"\n\nassetId_densidade_local = \"projects/ee-lucasljardim9/assets/wetlands_density\"\n\nassetId_densidade_regional = \"projects/ee-lucasljardim9/assets/wetlands_density_1000\"\n\ngeemap.ee_export_image_to_asset(\n    wetlands_count, \n    description='wetlands_count', \n    assetId=assetId_quantidade, \n    region=regiao_box, \n    scale=escala, maxPixels=1e13\n)\n\ngeemap.ee_export_image_to_asset(\n    wetlands_density_local, \n    description='wetlands_density_local', \n    assetId=assetId_densidade_local, \n    region=regiao_box, \n    scale=escala, maxPixels=1e13\n)\n\ngeemap.ee_export_image_to_asset(\n    wetlands_density_regional, \n    description='wetlands_density_regional', \n    assetId=assetId_densidade_regional, \n    region=regiao_box, \n    scale=escala, maxPixels=1e13\n)\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":false,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"output-file":"3_wetland_score.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjetura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Pré-selecionado","listing-page-order-by-date-asc":"Mais velho","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Crescente","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Arquivo modificado","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Tudo","listing-page-no-matches":"Nenhum item correspondente"},"metadata":{"lang":"pt-br","fig-responsive":true,"quarto-version":"1.3.340","bibliography":["bibliografia.bib"],"csl":"citation_style.csl","theme":"default","title":"Índice de áreas úmidas","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}